/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package reto5;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author VALERIA BENITEZ
 */
public class compraProductos extends javax.swing.JFrame {
tienda market = new tienda();
    /**
     * Creates new form compraProductos
     */
    public compraProductos() {
        initComponents();
       
        rellenarT("a");
       
    }
    int validarInv;
    
    String facturaN;
    int facturaC;
    int facturaP;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        palabra = new javax.swing.JTextField();
        Buscar = new javax.swing.JButton();
        toList = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        cantidad = new javax.swing.JTextField();
        agregarList = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        compra = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        borrar = new javax.swing.JButton();
        palabra_cod = new javax.swing.JTextField();
        buscarCod = new javax.swing.JButton();
        total = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 204, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cantidad", "precio"
            }
        ));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cantidad", "precio","Subtotal"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2 = new JTable(){
            public boolean isCellEditable(int row, int col){
                for(int i=0; i < jTable2.getRowCount();i++){
                    if(row == i){
                        return false;
                    }
                }
                return true;
            }

        };
        jTable2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable2MouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        palabra.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        palabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                palabraActionPerformed(evt);
            }
        });

        Buscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        toList.setText("SELECCIONAR PRODUCTO");
        toList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toListActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(233, 243, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Nombre del producto");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Cantidad");

        codigo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        cantidad.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        agregarList.setText("AGREGAR A COMPRA");
        agregarList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarListActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Agregar productos a la lista de compra");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(agregarList, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 93, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(agregarList, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        compra.setBackground(new java.awt.Color(153, 204, 255));
        compra.setText("COMPRAR");
        compra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compraActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("TOTAL");

        borrar.setBackground(new java.awt.Color(255, 102, 102));
        borrar.setText("BORRAR PRODUCTO DE LA LISTA");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        palabra_cod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                palabra_codActionPerformed(evt);
            }
        });

        buscarCod.setText("Buscar Codigo");
        buscarCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarCodActionPerformed(evt);
            }
        });

        total.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        total.setText(" ");
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });

        jLabel5.setText("Buscar por producto:");

        jLabel6.setText("Buscar por codigo:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(palabra)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Buscar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(163, 163, 163)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(palabra_cod, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(2, 2, 2)
                                    .addComponent(buscarCod)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(toList)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1)
                        .addGap(33, 33, 33)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(compra, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(35, 35, 35)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarCod)
                    .addComponent(Buscar)
                    .addComponent(palabra)
                    .addComponent(palabra_cod, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(toList, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compra, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void compraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compraActionPerformed
        //        File fichero = new File(archivo);
//        FileWriter fw;
//        fw = new FileWriter(fichero);
//        BufferedWriter bw = new BufferedWriter(fw);
//
//    
//StringBuilder builder = new StringBuilder();

// Message
//builder.append("Ferreteria las acacias\r\n");
//builder.append("Direccion: \r\n");
//builder.append("Acacias S.A\r\n");
//builder.append("Telefono\r\n");
//builder.append("--------------------------------------\r\n");
//
//builder.append("N.I.T.   \r\n");
//builder.append("Factura de venta Fac-00001\r\n");
//builder.append("\r\n");
//
//builder.append("Fecha : ");
//builder.append("\r\n");
Object model = null;
String[] a;
List<String> Nombre = new ArrayList<String>();
//        String[] a = null;
DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
for(int i = 0; i < modelo.getRowCount();i++){
    model = modelo.getValueAt(i,0);
    
    Nombre.add((String)model);
    
}
System.out.println(Nombre);
List<Integer> ab = new ArrayList<>();
Object model1 = null;
Object model2 = null;
Object model3 = null;
Document documento = new Document();
try{
    
    //pdf
    //String ruta = System.getProperty("user.home");
//
//PdfWriter.getInstance(documento,new FileOutputStream("C:/Users/facturas/ReporteVenta.pdf"));
documento.open();

PdfPTable table = new PdfPTable(3);
table.addCell("Codigo");
table.addCell("Nombre");
table.addCell("Cantidad");


for(int i = 0; i < modelo.getRowCount();i++){
    model1 = modelo.getValueAt(i,1);
    model2 =  modelo.getValueAt(i,2);
    model3 = modelo.getValueAt(i,3);
    System.out.println(model1);
    
    System.out.println(model2);
    //System.out.println(model3);
    int num1 = Integer.valueOf((String) model1);
    System.out.println(num1);
    double num2 = Double.valueOf((String) model2);
    int numero2 = (int) num2;
    int ac = (int) num1 * numero2;
    
    ab.add(ac);
}
System.out.println(ab);
int suma = 0;
for (int x = 0; x < ab.size(); x++) {
    suma = suma + ab.get(x);
    
}
String sum = String.valueOf(suma);
total.setText((String)sum);

String nom;

String nombre = codigo.getText();
int cant = Integer.parseInt(cantidad.getText());
try {
    ResultSet exec = null;
    Connection conn = BaseDatos.conexion();
    for (int x = 0; x < ab.size(); x++){
        nom = Nombre.get(x);
        System.out.println("nomre sasasa "+ nom);
        PreparedStatement datos = conn.prepareStatement(
                "select * from Productos where Nombre = '" + nom + "'");
        exec = datos.executeQuery();
        
        
        
        if (exec.next()) {
            
            int cantidadBase = exec.getInt("Inventario");
            int resultadoInv = cantidadBase;
            int priceTable = exec.getInt("precio_venta");
            System.out.println(cantidadBase+" "+cant);
            if(cantidadBase >= cant){
                resultadoInv = cantidadBase - cant;
            }else{
                JOptionPane.showMessageDialog(this,"La cantidad solicitada es mayor a la existente");
            }
            Connection con = BaseDatos.conexion();
            String consultaIns = null;
            
            
            
            
            model1 = modelo.getValueAt(x,1);
            int canti = Integer.valueOf((String) model1);
            System.out.println("cant"+canti);
            if(cantidadBase >= canti){
                resultadoInv = cantidadBase - canti;
                System.out.println(cantidadBase);
                System.out.println(canti);
                
                facturaN =  nom;
                facturaC =  canti;
                facturaP = priceTable;
                
                
                // builder.append(facturaC).append("   ").append(facturaN).append("        $").append(facturaP).append("\r\n");
                
                
                consultaIns = "UPDATE Productos set Inventario = "+ resultadoInv  +" where Nombre = '"+ nom +"'";
                System.out.println(consultaIns);
                
                PreparedStatement dataAct = con.prepareStatement(consultaIns);
                int filasAfectadas = dataAct.executeUpdate(consultaIns);
                
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
                
                String fech = dtf.format(LocalDateTime.now());
                String consultaInsert = "INSERT INTO historial_vendidos (nombre_prod,cantidad,precio,fecha) VALUES('"+nom+"',"+canti+","+priceTable+",'"+fech+"')";
                PreparedStatement dataCreate = con.prepareStatement(consultaInsert);
                int filasAfectadasCreate = dataCreate.executeUpdate(consultaInsert);
                if (filasAfectadasCreate > 0) {
                    System.out.println("insertado");
                }
            }else{
                JOptionPane.showMessageDialog(this,"La cantidad solicitada es mayor a la existente");
                resultadoInv = cantidadBase;
            }
            
            
            
            String siz =""+canti+"";
            String priceS =""+canti+"";
            
            
//                                   if (exec.next()) {
//                                        do {
//                                            table.addCell(nom);
//                                            table.addCell(siz);
//                                            table.addCell(priceS);
//                                            
//                                        } while (exec.next());
//                                        documento.add(table);
//
//                                    }


System.out.println(consultaIns);
        }
//                    String consultaIns = "UPDATE Productos set Inventario = "+ resultadoInv  +" where Nombre = '"+ nombre +"'";
//                
//                   PreparedStatement dataAct = con.prepareStatement(consultaIns);
//                    int filasAfectadas = dataAct.executeUpdate(consultaIns);


//market.rellenar();



codigo.setText("");
cantidad.setText("");
this.rellenarT(null);

    }
    System.out.println("exitoso");
    JOptionPane.showMessageDialog(this,"Compra realizada");
    // market.rellenar();
    //documento.close();
//                for(int i = 0; i < modelo.getRowCount();i++){
//                ((DefaultTableModel)jTable1.getModel()).removeRow(i);
//                }
} catch (Exception e) {
}
}catch(Exception e){
    
}
System.out.println(facturaN);
String tot = total.getText();

//    builder.append("\r\n");
//    
//    builder.append("\r\n");
//    builder.append("Total venta  ").append(tot);
//    builder.append("\r\n");
//    builder.append("GRACIAS POR SU PREFERENCIA");
// Paper Cut
//char[] cutPaper = new char[] { 0x1d, 'i'};
//builder.append(cutPaper);

   
//        bw.write(builder.toString());
//        bw.close();
//        System.out.println("factura hecha");
    compraProductos com = new compraProductos();
    com.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_compraActionPerformed

        
    
    private void agregarListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarListActionPerformed
        // TODO add your handling code here:
        System.out.println("val "+validarInv);
        
        String nombre = codigo.getText();
        String cant = cantidad.getText();
        int cantVal = Integer.parseInt(cantidad.getText());
        if(validarInv >= cantVal){
        Object model = null;
        String[] a;
        List<String> Nombre = new ArrayList<String>();
            System.out.println("Nom "+Nombre);
//        String[] a = null;
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        System.out.println("a "+modelo);
         products(nombre,cant);
         
            System.out.println("asd "+cant);
            
        for(int i = 0; i < modelo.getRowCount();i++){
            model = modelo.getValueAt(i,0);
            System.out.println("model "+model);
            Nombre.add((String)model);
           
        }
        System.out.println(Nombre);
        
        
        List<Integer> ab = new ArrayList<>();


       Object model1 = null;
       Object model2 = null;
       Object model3 = null;
            for(int i = 0; i < modelo.getRowCount();i++){
            model1 = modelo.getValueAt(i,1);
            model2 =  modelo.getValueAt(i,2);
            model3 =  modelo.getValueAt(i,3);
            System.out.println(model1);
            
            System.out.println(model2);
            System.out.println("sub t"+model3);
            int num1 = Integer.valueOf((String) model1);
            System.out.println(num1);
            double num2 = Double.valueOf((String) model2);
            int numero2 = (int) num2;
            int ac = (int) num1 * numero2;
            
            ab.add(ac);
            
            
        }
           
        System.out.println(ab);
        int suma = 0;
      for (int x = 0; x < ab.size(); x++) {
            suma = suma + ab.get(x);
            
         }
        String sum = String.valueOf(suma);
        
        
        System.out.println(sum);
        
        total.setText((String)sum);
        }else{
            JOptionPane.showMessageDialog(this, "No existe la cantidad solicitada");
        }
    }//GEN-LAST:event_agregarListActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        String nom;
        nom = palabra.getText();

        rellenarT(nom);

    }//GEN-LAST:event_BuscarActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
       //retornar();
       int file = jTable2.getSelectedRow();
       System.out.println("hola");
       if(evt.getClickCount() == 2){
           
       Object ja = jTable2.getValueAt(file,1);
        System.out.println(ja);
       }
       
       
       
        
    }//GEN-LAST:event_jTable2MouseClicked

    private void toListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toListActionPerformed
        // TODO add your handling code here:
        retornar();
       
        this.cantidad.setText("");
        
    }//GEN-LAST:event_toListActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_totalActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
    // TODO add your handling code here:
    int fila = jTable1.getSelectedRow(); //Elimna la fila selecionada por el usuario//Elimna la fila selecionada por el usuario
        
        ((DefaultTableModel)jTable1.getModel()).removeRow(fila);

         String nombre = codigo.getText();
        String cant = cantidad.getText();
        int cantVal = Integer.parseInt(cantidad.getText());
        if(validarInv >= cantVal){
        Object model = null;
        String[] a;
        List<String> Nombre = new ArrayList<String>();
            System.out.println("Nom "+Nombre);
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        System.out.println("a "+modelo);
         
         
            System.out.println("asd "+cant);
            
        for(int i = 0; i < modelo.getRowCount();i++){
            model = modelo.getValueAt(i,0);
            System.out.println("model "+model);
            Nombre.add((String)model);
           
        }
        System.out.println(Nombre);
        
        
        List<Integer> ab = new ArrayList<>();


       Object model1 = null;
       Object model2 = null;
       Object model3 = null;
            for(int i = 0; i < modelo.getRowCount();i++){
            model1 = modelo.getValueAt(i,1);
            model2 =  modelo.getValueAt(i,2);
            model3 =  modelo.getValueAt(i,3);
            System.out.println(model1);
            
            System.out.println(model2);
            System.out.println("sub t"+model3);
            int num1 = Integer.valueOf((String) model1);
            System.out.println(num1);
            double num2 = Double.valueOf((String) model2);
            int numero2 = (int) num2;
            int ac = (int) num1 * numero2;
            
            ab.add(ac);
            
            
        }
           
        System.out.println(ab);
        int suma = 0;
      for (int x = 0; x < ab.size(); x++) {
            suma = suma + ab.get(x);
            
         }
        String sum = String.valueOf(suma);
        
        
        System.out.println(sum);
        
        total.setText((String)sum);
        }
    }//GEN-LAST:event_borrarActionPerformed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
    // TODO add your handling code here:
     int file = jTable2.getSelectedRow();
       System.out.println("hola");
       if(evt.getClickCount() == 2){
           
            Object ja = jTable2.getValueAt(jTable2.getSelectedRow(),1);
            System.out.println(ja);
       }
  
    }//GEN-LAST:event_jTable2MousePressed

    private void palabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_palabraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_palabraActionPerformed

    private void buscarCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarCodActionPerformed
        // TODO add your handling code here:
        String cod;
        cod = palabra_cod.getText();

        rellenarTCod(cod);
        
    }//GEN-LAST:event_buscarCodActionPerformed

    private void palabra_codActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_palabra_codActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_palabra_codActionPerformed

    private void jTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseReleased
        // TODO add your handling code here:
        int file = jTable2.getSelectedRow();
       System.out.println("hola");
       if(evt.getClickCount() == 2){
           
            Object ja = jTable2.getValueAt(jTable2.getSelectedRow(),1);
            System.out.println(ja);
       }
        
        
        jTable2.addMouseListener(new MouseAdapter() {
        public void mouseCli(MouseEvent Mouse_evt) {
        JTable table =(JTable) Mouse_evt.getSource();
        Point point = Mouse_evt.getPoint();
        int row = table.rowAtPoint(point);
        if (Mouse_evt.getClickCount() == 2) {
        System.out.println(""+jTable2.getValueAt(jTable2.getSelectedRow(), 1));
        }
        }
        });
    }//GEN-LAST:event_jTable2MouseReleased
        

    public void listaDes(){
        jTable2.addMouseListener(new MouseAdapter() {
        public void mouseCli(MouseEvent Mouse_evt) {
        JTable table =(JTable) Mouse_evt.getSource();
        Point point = Mouse_evt.getPoint();
        int row = table.rowAtPoint(point);
        if (Mouse_evt.getClickCount() == 2) {
        System.out.println(""+jTable2.getValueAt(jTable2.getSelectedRow(), 1));
        }
        }
        });
    }
    public void retornar(){
        int fila = jTable2.getSelectedRow();
        System.out.println(fila);
        
            String Nombre = (String) jTable2.getValueAt(fila, 1);
            int can = (int) jTable2.getValueAt(fila, 3);

            System.out.println(Nombre);
            codigo.setText(Nombre);
            validarInv = can;
            //cantidad.setText(can);
        
    }
    public void rellenarT(String nom){
         try {
            Connection conn = BaseDatos.conexion();

           
            String consulta = "SELECT cod_prod,Nombre,precio_venta,Inventario FROM Productos where Nombre like ('"+ nom +"%')";

            Statement result = conn.createStatement();
            ResultSet exec = result.executeQuery(consulta);

            DefaultTableModel modelo = new DefaultTableModel();
            jTable2 = new JTable(modelo);
            jScrollPane2.setViewportView(jTable2);

            modelo.addColumn("Codigo Producto");
            modelo.addColumn("Nombre");
            modelo.addColumn("precio_venta");
            modelo.addColumn("Inventario");

            while (exec.next()) {
                Object[] fila = new Object[4];
                for (int i = 0; i < 4; i++) {
                    fila[i] = exec.getObject(i + 1);
                }
                modelo.addRow(fila);
            }
            
            
            
            

        } catch (SQLException ex) {
          
            JOptionPane.showMessageDialog(null, "Error al llenar la tabla");
        }
    }
    
    public void rellenarTCod(String cod){
         try {
            Connection conn = BaseDatos.conexion();

           
            String consulta = "SELECT cod_prod,Nombre,precio_venta,Inventario FROM Productos where cod_prod like ('"+ cod +"%')";

            Statement result = conn.createStatement();
            ResultSet exec = result.executeQuery(consulta);

            DefaultTableModel modelo = new DefaultTableModel();
            jTable2 = new JTable(modelo);
            jScrollPane2.setViewportView(jTable2);

            modelo.addColumn("Codigo Producto");
            modelo.addColumn("Nombre");
            modelo.addColumn("precio_venta");
            modelo.addColumn("Inventario");

            while (exec.next()) {
                Object[] fila = new Object[4];
                for (int i = 0; i < 4; i++) {
                    fila[i] = exec.getObject(i + 1);
                }
                modelo.addRow(fila);
            }
            
            
            
            

        } catch (SQLException ex) {
          
            JOptionPane.showMessageDialog(null, "Error al llenar la tabla");
        }
    }
    public String[] products(String st,String ab){
   
        //for (int i = 0; i < 10; i++) {
            String[] abias = {st,ab};
                System.out.println("adasdsad"+st);
            lista(abias);
            System.out.println("assdasda"+st);
           //System.out.println(lista(abias));
            return abias;
        
        
        
    }
    public void lista(String[] as){
        
   String nom = as[0];
    String can = as[1];
    
//        
//         
//           System.out.println(as);
//
//            //DefaultTableModel modelo = new DefaultTableModel();
             DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
//            //jTable1 = new JTable(modelo);
             jScrollPane1.setViewportView(jTable1);
//                         
//            
//       // String[] val = {};
//  
            Connection conn = BaseDatos.conexion();
               
                try{   
                    PreparedStatement datos = conn.prepareStatement(
                     "select * from Productos where Nombre = '" + nom + "'");
                    ResultSet exec = datos.executeQuery();
                
                
                
                if (exec.next()) {
                   
                    String prec = exec.getString("precio_venta");
                    double sub = Double.valueOf(prec);
                    int cantid = Integer.valueOf(can);
                    double subTotal = sub * cantid;
                    String sbttal = String.valueOf(subTotal);
                    System.out.println("sub "+sbttal);
                    
                  
                 modelo.addRow(new Object[]{nom, can,prec,sbttal});
                }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this,"error al cargar campo, vuelva a intenarlo");
                }
                //modelo.addRow(fila);
                
                          
                //Object[][] fila = new Object[2][2];
                
//                String[][] matriz = {{nom},{can}};
//                String a = null;
//                String b = null;
//                System.out.println(matriz.length);
//               //String[][] max;
//               int tam = matriz.length;
//                for (int i=0; i < 3; i++) {
//                     for (int j=0; j < 2; j++) {
//                          a = matriz[i][0];
//                          b = matriz[i][1];
//                           String[][] max ={{a},{b}};
//                          System.out.println(max);
//                     }
//                     
//                     System.out.println("");
//                 }
                
                
               
//                int i;
//                String[] val = new String[2];
//                 String mel =null;
//                for (i = 0; i < 1; i++) {
//                    
//                    for (int j = 0; j < 1; j++) {
//                        String valor = (String) jTable1.getValueAt(i, 0);
//                        String[] valores = {valor};
//                        val = valores;
//                        if (j>2) {
//                            j=0;
//                        }
//                    }
//                mel = val.toString();
        // Con esta condición solo ponemos comas hasta el penúltimo valor :)
        //if (i < (fila-1)) {
        //    valores += ", ";
                   //}
               // }
//JOptionPane.showMessageDialog(null, "valores de la columna1: " + mel);
                
                //for (int i = 0; i < 5; i++) {
//                    fila[0] = nom;
//                    fila[1]=can;
                    
                  //  for (int j = 0; j < 10; j++) {
                    //     fila[i][0] = modelo.getValueAt(i,0); 
                      //  if (j<2) {
                        //    fila[i][1] = modelo.getValueAt(i,1);   
                         //   j=0;
                        //}
                        //fila[i] = (String[])modelo.getValueAt(i,j); 
                    //}
                    
                   //modelo.addRow(fila);
               //}
                //System.out.println(fila);
                //obtener los valores de cada columna y meternos en un array para finalmente pasarlos al boton de compra que hara la actualizacion
                //modelo.getValueAt(ERROR, NORMAL)
    //return fila;        
    }
            
            

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(compraProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(compraProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(compraProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(compraProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new compraProductos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton agregarList;
    private javax.swing.JButton borrar;
    private javax.swing.JButton buscarCod;
    private javax.swing.JTextField cantidad;
    private javax.swing.JTextField codigo;
    private javax.swing.JButton compra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField palabra;
    private javax.swing.JTextField palabra_cod;
    private javax.swing.JButton toList;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables
}
